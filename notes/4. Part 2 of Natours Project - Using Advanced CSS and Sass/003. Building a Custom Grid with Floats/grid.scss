$color-orange-red: orange;


/*$width-row: 114rem;*/
$grid-width: 114rem;
/*$margin-buttom-row: 8rem;*/
$gutter-vertical: 8rem;
$gutter-horizontal: 6rem;

@mixin flexfix {
	&::after {
		content: "";
		display: table;
		clear: both;
	}
}

*,
*::after,
*::before {
	margin: 0;
	padding: 0;
	box-sizing: inherit;
}

html {
	font-size: 62.5%;
}

body {
	box-sizing: border-box;
}

.row{
	font-size: $default-font-size;
	/*
		当窗口变化时，宽度也随之变化
		如果有足够空间，就按照指定的宽度设置
		如果没有，则简单100%填充当前可用的空间
	*/
	max-width: $grid-width;
	/*
	指定左右边距auto，则浏览器会自动计算左右边距，即左右边距相等，元素就居中了
	*/
	margin: 0 auto;
	background-color: #eee;

	@include flexfix;

	&:not(:last-child) {
		margin-bottom: $gutter-vertical;
	}

	&::after {
		content: "";
		display: table;
		clear: both;
	}

	[class^="col-"] {
		/*display: inline-block;*/
		float: left;
		/*margin: 0 $gutter-horizontal;*/
		/*width: calc(($grid-width - $gutter-horizontal * 4)/2;*/
		/*width: calc((100% - #{$gutter-horizontal})/2;*/
		text-align: center;
		background-color: $color-orange-red;

		&:not(:last-child) {
			margin-right: $gutter-horizontal;
		}
	}

	.col-1-u-2 {
		width: calc((100% - #{$gutter-horizontal})/2);
	}

	.col-1-u-3 {
		width: calc((100% - #{$gutter-horizontal} * 2)/3);
	}

	.col-2-u-3 {
		width: calc(((100% - #{$gutter-horizontal} * 2)/3)*2 + #{$gutter-horizontal});
	}

	.col-1-u-4 {
		width: calc((100% - #{$gutter-horizontal} * 3)/4);
	}

	.col-2-u-4 {
		width: calc(((100% - #{$gutter-horizontal} * 3)/4) * 2 + #{$gutter-horizontal});
	}

	.col-3-u-4 {
		width: calc(((100% - #{$gutter-horizontal} * 3)/4) * 3 + #{$gutter-horizontal} * 2);
	}
}


